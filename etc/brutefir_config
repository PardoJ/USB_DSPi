float_bits: 32;             
filter_length: 4096,16;       # length of filters
sampling_rate: 96000;
overflow_warnings: true;
show_progress: false;       
max_dither_table_size: 0;   
allow_poll_mode: false;
modules_path: ".";          # extra path where to find BruteFIR modules
monitor_rate: true;        # monitor sample rate
powersave: true;            # pause filtering when input is zero
lock_memory: false;          # try to lock memory if realtime prio is set
sdf_length: -1;             # subsample filter half length in samples
safety_limit: 8.0;             # if non-zero max dB in output before aborting
convolver_config: "/home/pi/.brutefir_convolver"; # location of convolver config file
# config_file: "/home/shairport-sync/.brutefir_config"; # standard location of main config file


coeff "left_convolver" {
    filename: "/home/pi/speaker.raw";
    format: "S24_LE";
    blocks: -1;
    skip: 0;
    shared_mem: false;
};

coeff "right_convolver" {
    filename: "/home/pi/speaker.raw";
    format: "S24_LE";
    blocks: -1;
    skip: 0;
    shared_mem: false;
};

coeff "room_convolver" {
    filename: "/home/pi/room.raw";
    format: "S24_LE";
    blocks: -1;
    skip: 0;
    shared_mem: false;
};

input "left_in", "right_in" {
    device: "alsa" { device: "hw:0,1"; ignore_xrun: true; };
    sample: "S32_LE";
    channels: 2/0,1;
    delay: 0,0;
    maxdelay: -1;
    mute: false, false;
};


# Likewise, configure where BruteFIR sends its output
output "left_out", "right_out" {
    device: "alsa" { device: "hw:1,0"; ignore_xrun: true; };
    sample: "S24_LE";
    channels: 2/0,1;
    delay: 0,0;
    maxdelay: -1;
    subdelay: 0,0;
    mute: false, false;
    dither: false;
};


filter "drc_l" {
    process: 1;
    from_inputs: "left_in";
    to_filters: "drc_l2";
    coeff: "left_convolver";
    crossfade: false;
    delay: 0;
};

filter "drc_r" {
    process: 0;
    from_inputs: "right_in";
    to_filters: "drc_r2";
    coeff: "right_convolver";
    crossfade: false;
    delay: 0;
};

filter "drc_l2" {
    process: 1;
    from_filters: "drc_l";
    to_outputs: "left_out";
    crossfade: false;
    #coeff: "room_convolver";
    coeff: -1;
    delay: 0;
};

filter "drc_r2" {
    process: 0;
    from_filters: "drc_r";
    to_outputs: "right_out";
    crossfade: false;
    #coeff: "room_convolver";
    coeff: -1;
    delay: 0;
};

